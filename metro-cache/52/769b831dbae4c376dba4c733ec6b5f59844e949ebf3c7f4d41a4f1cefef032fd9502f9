{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./StackActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./createConfigGetter\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../NavigationActions\"));\n\n  var _StackActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./StackActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[9], \"./pathUtils\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var defaultActionCreators = function defaultActionCreators(route, navStateKey) {\n    return {};\n  };\n\n  function childrenUpdateWithoutSwitchingIndex(actionType) {\n    return [_NavigationActions.default.SET_PARAMS, _StackActions.default.COMPLETE_TRANSITION].includes(actionType);\n  }\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    function resetChildRoute(routeName) {\n      var params = routeName === initialRouteName ? initialRouteParams : undefined;\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = _NavigationActions.default.init();\n\n        return _objectSpread({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    function getNextState(prevState, possibleNextState) {\n      if (!prevState) {\n        return possibleNextState;\n      }\n\n      var nextState;\n\n      if (prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        return _objectSpread({}, possibleNextState, {\n          routes: nextRoutes\n        });\n      } else {\n        nextState = possibleNextState;\n      }\n\n      return nextState;\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      return {\n        routes: routes,\n        index: initialRouteIndex,\n        isTransitioning: false\n      };\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? _objectSpread({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === _NavigationActions.default.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return _objectSpread({}, route, {\n                params: _objectSpread({}, route.params, {}, params, {}, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === _NavigationActions.default.BACK) {\n          if (isBackEligible && shouldBackNavigateToInitialRoute) {\n            activeChildIndex = initialRouteIndex;\n          } else {\n            return state;\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === _NavigationActions.default.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState;\n\n            if (action.action) {\n              newChildState = childRouter ? childRouter.getStateForAction(action.action, childState) : null;\n            } else if (!action.action && action.params) {\n              newChildState = _objectSpread({}, childState, {\n                params: _objectSpread({}, childState.params || {}, {}, action.params)\n              });\n            }\n\n            if (newChildState && newChildState !== childState) {\n              var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              return getNextState(prevState, _objectSpread({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              }));\n            } else if (!newChildState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params = _objectSpread({}, lastRoute.params, {}, action.params);\n\n            var _routes3 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = _objectSpread({}, lastRoute, {\n              params: _params\n            });\n            return getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(prevState, _objectSpread({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return _objectSpread({}, state);\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = (0, _toConsumableArray2.default)(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (childrenUpdateWithoutSwitchingIndex(action.type)) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(prevState, _objectSpread({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.navigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,8,0],[31,0,10,0],[31,6,10,6,"defaultActionCreators"],[31,27,10,27],[31,30,10,30],[31,39,10,6,"defaultActionCreators"],[31,60,10,30],[31,61,10,31,"route"],[31,66,10,30],[31,68,10,38,"navStateKey"],[31,79,10,30],[32,0,10,30],[32,11,10,55],[32,13,10,30],[33,0,10,30],[33,3,10,0],[35,0,12,0],[35,11,12,9,"childrenUpdateWithoutSwitchingIndex"],[35,46,12,0],[35,47,12,45,"actionType"],[35,57,12,0],[35,59,12,57],[36,0,13,2],[36,11,13,9],[36,12,14,4,"NavigationActions"],[36,39,14,22,"SET_PARAMS"],[36,49,13,9],[36,51,16,4,"StackActions"],[36,73,16,17,"COMPLETE_TRANSITION"],[36,92,13,9],[36,94,17,4,"includes"],[36,102,13,9],[36,103,17,13,"actionType"],[36,113,13,9],[36,114,13,2],[37,0,18,1],[39,17,20,15],[39,35,20,16,"routeConfigs"],[39,47,20,15],[39,49,20,46],[40,0,20,46],[40,8,20,30,"config"],[40,14,20,46],[40,85,20,39],[40,87,20,46],[41,0,22,2],[41,41,22,25,"routeConfigs"],[41,53,22,2],[42,0,24,2],[42,8,24,8,"order"],[42,13,24,13],[42,16,24,16,"config"],[42,22,24,22],[42,23,24,23,"order"],[42,28,24,16],[42,32,24,32,"Object"],[42,38,24,38],[42,39,24,39,"keys"],[42,43,24,32],[42,44,24,44,"routeConfigs"],[42,56,24,32],[42,57,24,2],[43,0,26,2],[43,8,26,8,"getCustomActionCreators"],[43,31,26,31],[43,34,27,4,"config"],[43,40,27,10],[43,41,27,11,"getCustomActionCreators"],[43,64,27,4],[43,68,27,38,"defaultActionCreators"],[43,89,26,2],[44,0,29,2],[44,8,29,8,"initialRouteParams"],[44,26,29,26],[44,29,29,29,"config"],[44,35,29,35],[44,36,29,36,"initialRouteParams"],[44,54,29,2],[45,0,30,2],[45,8,30,8,"initialRouteName"],[45,24,30,24],[45,27,30,27,"config"],[45,33,30,33],[45,34,30,34,"initialRouteName"],[45,50,30,27],[45,54,30,54,"order"],[45,59,30,59],[45,60,30,60],[45,61,30,59],[45,62,30,2],[46,0,31,2],[46,8,31,8,"backBehavior"],[46,20,31,20],[46,23,31,23,"config"],[46,29,31,29],[46,30,31,30,"backBehavior"],[46,42,31,23],[46,46,31,46],[46,52,31,2],[47,0,32,2],[47,8,32,8,"shouldBackNavigateToInitialRoute"],[47,40,32,40],[47,43,32,43,"backBehavior"],[47,55,32,55],[47,60,32,60],[47,74,32,2],[48,0,33,2],[48,8,33,8,"resetOnBlur"],[48,19,33,19],[48,22,33,22,"config"],[48,28,33,28],[48,29,33,29,"hasOwnProperty"],[48,43,33,22],[48,44,33,44],[48,57,33,22],[48,61,34,6,"config"],[48,67,34,12],[48,68,34,13,"resetOnBlur"],[48,79,33,22],[48,82,35,6],[48,86,33,2],[49,0,36,2],[49,8,36,8,"initialRouteIndex"],[49,25,36,25],[49,28,36,28,"order"],[49,33,36,33],[49,34,36,34,"indexOf"],[49,41,36,28],[49,42,36,42,"initialRouteName"],[49,58,36,28],[49,59,36,2],[50,0,37,2],[50,8,37,8,"childRouters"],[50,20,37,20],[50,23,37,23],[50,25,37,2],[51,0,38,2,"order"],[51,4,38,2,"order"],[51,9,38,7],[51,10,38,8,"forEach"],[51,17,38,2],[51,18,38,16],[51,28,38,16,"routeName"],[51,37,38,25],[51,39,38,29],[52,0,39,4],[52,10,39,10,"routeConfig"],[52,21,39,21],[52,24,39,24,"routeConfigs"],[52,36,39,36],[52,37,39,37,"routeName"],[52,46,39,36],[52,47,39,4],[53,0,40,4,"childRouters"],[53,6,40,4,"childRouters"],[53,18,40,16],[53,19,40,17,"routeName"],[53,28,40,16],[53,29,40,4],[53,32,40,30],[53,36,40,4],[54,0,41,4],[54,10,41,10,"screen"],[54,16,41,16],[54,19,41,19],[54,55,41,41,"routeConfigs"],[54,67,41,19],[54,69,41,55,"routeName"],[54,78,41,19],[54,79,41,4],[56,0,42,4],[56,10,42,8,"screen"],[56,16,42,14],[56,17,42,15,"router"],[56,23,42,4],[56,25,42,23],[57,0,43,6,"childRouters"],[57,8,43,6,"childRouters"],[57,20,43,18],[57,21,43,19,"routeName"],[57,30,43,18],[57,31,43,6],[57,34,43,32,"screen"],[57,40,43,38],[57,41,43,39,"router"],[57,47,43,6],[58,0,44,5],[59,0,45,3],[59,5,38,2],[61,0,20,46],[61,28,50,6],[61,61,50,23,"childRouters"],[61,73,50,6],[61,75,50,37,"routeConfigs"],[61,87,50,6],[61,89,50,51,"config"],[61,95,50,6],[61,96,20,46],[62,0,20,46],[62,8,48,4,"getPathAndParamsForRoute"],[62,32,20,46],[62,53,48,4,"getPathAndParamsForRoute"],[62,77,20,46],[63,0,20,46],[63,8,49,4,"getActionForPathAndParams"],[63,34,20,46],[63,55,49,4,"getActionForPathAndParams"],[63,80,20,46],[65,0,52,2],[65,8,52,6,"initialRouteIndex"],[65,25,52,23],[65,30,52,28],[65,31,52,29],[65,32,52,2],[65,34,52,32],[66,0,53,4],[66,12,53,10],[66,16,53,14,"Error"],[66,21,53,10],[66,22,54,6],[66,53,54,35,"initialRouteName"],[66,69,54,6],[66,102,55,28,"order"],[66,107,55,33],[66,108,55,34,"map"],[66,111,55,28],[66,112,55,38],[66,122,55,38,"n"],[66,123,55,39],[67,0,55,39],[67,22,55,47,"n"],[67,23,55,39],[68,0,55,39],[68,7,55,28],[68,9,55,53,"join"],[68,13,55,28],[68,14,55,58],[68,18,55,28],[68,19,54,6],[68,20,53,10],[68,21,53,4],[69,0,57,3],[71,0,59,2],[71,13,59,11,"resetChildRoute"],[71,28,59,2],[71,29,59,27,"routeName"],[71,38,59,2],[71,40,59,38],[72,0,60,4],[72,10,60,10,"params"],[72,16,60,16],[72,19,61,6,"routeName"],[72,28,61,15],[72,33,61,20,"initialRouteName"],[72,49,61,6],[72,52,61,39,"initialRouteParams"],[72,70,61,6],[72,73,61,60,"undefined"],[72,82,60,4],[73,0,62,4],[73,10,62,10,"childRouter"],[73,21,62,21],[73,24,62,24,"childRouters"],[73,36,62,36],[73,37,62,37,"routeName"],[73,46,62,36],[73,47,62,4],[75,0,63,4],[75,10,63,8,"childRouter"],[75,21,63,4],[75,23,63,21],[76,0,64,6],[76,12,64,12,"childAction"],[76,23,64,23],[76,26,64,26,"NavigationActions"],[76,53,64,44,"init"],[76,57,64,26],[76,59,64,6],[78,0,65,6],[78,33,66,11,"childRouter"],[78,44,66,22],[78,45,66,23,"getStateForAction"],[78,62,66,11],[78,63,66,41,"childAction"],[78,74,66,11],[78,75,65,6],[79,0,67,8,"key"],[79,10,67,8,"key"],[79,13,67,11],[79,15,67,13,"routeName"],[79,24,65,6],[80,0,68,8,"routeName"],[80,10,68,8,"routeName"],[80,19,68,17],[80,21,68,8,"routeName"],[80,30,65,6],[81,0,69,8,"params"],[81,10,69,8,"params"],[81,16,69,14],[81,18,69,8,"params"],[82,0,65,6],[83,0,71,5],[85,0,72,4],[85,13,72,11],[86,0,73,6,"key"],[86,8,73,6,"key"],[86,11,73,9],[86,13,73,11,"routeName"],[86,22,72,11],[87,0,74,6,"routeName"],[87,8,74,6,"routeName"],[87,17,74,15],[87,19,74,6,"routeName"],[87,28,72,11],[88,0,75,6,"params"],[88,8,75,6,"params"],[88,14,75,12],[88,16,75,6,"params"],[89,0,72,11],[89,7,72,4],[90,0,77,3],[92,0,79,2],[92,13,79,11,"getNextState"],[92,25,79,2],[92,26,79,24,"prevState"],[92,35,79,2],[92,37,79,35,"possibleNextState"],[92,54,79,2],[92,56,79,54],[93,0,80,4],[93,10,80,8],[93,11,80,9,"prevState"],[93,20,80,4],[93,22,80,20],[94,0,81,6],[94,15,81,13,"possibleNextState"],[94,32,81,6],[95,0,82,5],[97,0,84,4],[97,10,84,8,"nextState"],[97,19,84,4],[99,0,85,4],[99,10,85,8,"prevState"],[99,19,85,17],[99,20,85,18,"index"],[99,25,85,8],[99,30,85,28,"possibleNextState"],[99,47,85,45],[99,48,85,46,"index"],[99,53,85,8],[99,57,85,55,"resetOnBlur"],[99,68,85,4],[99,70,85,68],[100,0,86,6],[100,12,86,12,"prevRouteName"],[100,25,86,25],[100,28,86,28,"prevState"],[100,37,86,37],[100,38,86,38,"routes"],[100,44,86,28],[100,45,86,45,"prevState"],[100,54,86,54],[100,55,86,55,"index"],[100,60,86,28],[100,62,86,62,"routeName"],[100,71,86,6],[101,0,87,6],[101,12,87,12,"nextRoutes"],[101,22,87,22],[101,58,87,29,"possibleNextState"],[101,75,87,46],[101,76,87,47,"routes"],[101,82,87,22],[101,83,87,6],[102,0,88,6,"nextRoutes"],[102,8,88,6,"nextRoutes"],[102,18,88,16],[102,19,88,17,"prevState"],[102,28,88,26],[102,29,88,27,"index"],[102,34,88,16],[102,35,88,6],[102,38,88,36,"resetChildRoute"],[102,53,88,51],[102,54,88,52,"prevRouteName"],[102,67,88,51],[102,68,88,6],[103,0,90,6],[103,33,91,11,"possibleNextState"],[103,50,90,6],[104,0,92,8,"routes"],[104,10,92,8,"routes"],[104,16,92,14],[104,18,92,16,"nextRoutes"],[105,0,90,6],[106,0,94,5],[106,7,85,4],[106,13,94,11],[107,0,95,6,"nextState"],[107,8,95,6,"nextState"],[107,17,95,15],[107,20,95,18,"possibleNextState"],[107,37,95,6],[108,0,96,5],[110,0,98,4],[110,13,98,11,"nextState"],[110,22,98,4],[111,0,99,3],[113,0,101,2],[113,13,101,11,"getInitialState"],[113,28,101,2],[113,31,101,29],[114,0,102,4],[114,10,102,10,"routes"],[114,16,102,16],[114,19,102,19,"order"],[114,24,102,24],[114,25,102,25,"map"],[114,28,102,19],[114,29,102,29,"resetChildRoute"],[114,44,102,19],[114,45,102,4],[115,0,103,4],[115,13,103,11],[116,0,104,6,"routes"],[116,8,104,6,"routes"],[116,14,104,12],[116,16,104,6,"routes"],[116,22,103,11],[117,0,105,6,"index"],[117,8,105,6,"index"],[117,13,105,11],[117,15,105,13,"initialRouteIndex"],[117,32,103,11],[118,0,106,6,"isTransitioning"],[118,8,106,6,"isTransitioning"],[118,23,106,21],[118,25,106,23],[119,0,103,11],[119,7,103,4],[120,0,108,3],[122,0,110,2],[122,11,110,9],[123,0,111,4,"childRouters"],[123,6,111,4,"childRouters"],[123,18,111,16],[123,20,111,4,"childRouters"],[123,32,110,9],[124,0,113,4,"getActionCreators"],[124,6,113,4,"getActionCreators"],[124,23,110,9],[124,52,113,22,"route"],[124,57,110,9],[124,59,113,29,"stateKey"],[124,67,110,9],[124,69,113,39],[125,0,114,6],[125,15,114,13,"getCustomActionCreators"],[125,38,114,36],[125,39,114,37,"route"],[125,44,114,36],[125,46,114,44,"stateKey"],[125,54,114,36],[125,55,114,6],[126,0,115,5],[126,7,110,9],[127,0,117,4,"getStateForAction"],[127,6,117,4,"getStateForAction"],[127,23,110,9],[127,52,117,22,"action"],[127,58,110,9],[127,60,117,30,"inputState"],[127,70,110,9],[127,72,117,42],[128,0,118,6],[128,12,118,10,"prevState"],[128,21,118,19],[128,24,118,22,"inputState"],[128,34,118,32],[128,55,118,40,"inputState"],[128,65,118,32],[128,69,118,55,"inputState"],[128,79,118,6],[129,0,119,6],[129,12,119,10,"state"],[129,17,119,15],[129,20,119,18,"inputState"],[129,30,119,28],[129,34,119,32,"getInitialState"],[129,49,119,47],[129,51,119,6],[130,0,120,6],[130,12,120,10,"activeChildIndex"],[130,28,120,26],[130,31,120,29,"state"],[130,36,120,34],[130,37,120,35,"index"],[130,42,120,6],[132,0,122,6],[132,12,122,10,"action"],[132,18,122,16],[132,19,122,17,"type"],[132,23,122,10],[132,28,122,26,"NavigationActions"],[132,55,122,44,"INIT"],[132,59,122,6],[132,61,122,50],[133,0,122,50],[133,14,127,16,"params"],[133,20,122,50],[133,23,127,27,"action"],[133,29,122,50],[133,30,127,16,"params"],[133,36,122,50],[135,0,128,8],[135,14,128,12,"params"],[135,20,128,8],[135,22,128,20],[136,0,129,10,"state"],[136,12,129,10,"state"],[136,17,129,15],[136,18,129,16,"routes"],[136,24,129,10],[136,27,129,25,"state"],[136,32,129,30],[136,33,129,31,"routes"],[136,39,129,25],[136,40,129,38,"map"],[136,43,129,25],[136,44,129,42],[136,54,129,42,"route"],[136,59,129,47],[137,0,129,47],[137,39,130,15,"route"],[137,44,129,47],[138,0,131,12,"params"],[138,16,131,12,"params"],[138,22,131,18],[138,42,132,17,"route"],[138,47,132,22],[138,48,132,23,"params"],[138,54,131,18],[138,60,133,17,"params"],[138,66,131,18],[138,72,134,18,"route"],[138,77,134,23],[138,78,134,24,"routeName"],[138,87,134,18],[138,92,134,38,"initialRouteName"],[138,108,134,18],[138,111,135,18,"initialRouteParams"],[138,129,134,18],[138,132,136,18],[138,136,131,18],[139,0,129,47],[140,0,129,47],[140,13,129,25],[140,14,129,10],[141,0,139,9],[142,0,140,7],[144,0,143,6],[144,12,143,12,"activeChildLastState"],[144,32,143,32],[144,35,143,35,"state"],[144,40,143,40],[144,41,143,41,"routes"],[144,47,143,35],[144,48,143,48,"state"],[144,53,143,53],[144,54,143,54,"index"],[144,59,143,35],[144,60,143,6],[145,0,144,6],[145,12,144,12,"activeChildRouter"],[145,29,144,29],[145,32,144,32,"childRouters"],[145,44,144,44],[145,45,144,45,"order"],[145,50,144,50],[145,51,144,51,"state"],[145,56,144,56],[145,57,144,57,"index"],[145,62,144,50],[145,63,144,44],[145,64,144,6],[147,0,145,6],[147,12,145,10,"activeChildRouter"],[147,29,145,6],[147,31,145,29],[148,0,146,8],[148,14,146,14,"activeChildState"],[148,30,146,30],[148,33,146,33,"activeChildRouter"],[148,50,146,50],[148,51,146,51,"getStateForAction"],[148,68,146,33],[148,69,147,10,"action"],[148,75,146,33],[148,77,148,10,"activeChildLastState"],[148,97,146,33],[148,98,146,8],[150,0,150,8],[150,14,150,12],[150,15,150,13,"activeChildState"],[150,31,150,12],[150,35,150,33,"inputState"],[150,45,150,8],[150,47,150,45],[151,0,151,10],[151,19,151,17],[151,23,151,10],[152,0,152,9],[154,0,153,8],[154,14,153,12,"activeChildState"],[154,30,153,28],[154,34,153,32,"activeChildState"],[154,50,153,48],[154,55,153,53,"activeChildLastState"],[154,75,153,8],[154,77,153,75],[155,0,154,10],[155,16,154,16,"routes"],[155,23,154,22],[155,59,154,29,"state"],[155,64,154,34],[155,65,154,35,"routes"],[155,71,154,22],[155,72,154,10],[157,0,155,10,"routes"],[157,12,155,10,"routes"],[157,19,155,16],[157,20,155,17,"state"],[157,25,155,22],[157,26,155,23,"index"],[157,31,155,16],[157,32,155,10],[157,35,155,32,"activeChildState"],[157,51,155,10],[158,0,156,10],[158,19,156,17,"getNextState"],[158,31,156,29],[158,32,156,30,"prevState"],[158,41,156,29],[158,61,157,15,"state"],[158,66,156,29],[159,0,158,12,"routes"],[159,14,158,12,"routes"],[159,20,158,18],[159,22,158,12,"routes"],[160,0,156,29],[160,15,156,10],[161,0,160,9],[162,0,161,7],[164,0,165,6],[164,12,165,12,"isBackEligible"],[164,26,165,26],[164,29,166,8,"action"],[164,35,166,14],[164,36,166,15,"key"],[164,39,166,8],[164,43,166,22],[164,47,166,8],[164,51,166,30,"action"],[164,57,166,36],[164,58,166,37,"key"],[164,61,166,30],[164,66,166,45,"activeChildLastState"],[164,86,166,65],[164,87,166,66,"key"],[164,90,165,6],[166,0,167,6],[166,12,167,10,"action"],[166,18,167,16],[166,19,167,17,"type"],[166,23,167,10],[166,28,167,26,"NavigationActions"],[166,55,167,44,"BACK"],[166,59,167,6],[166,61,167,50],[167,0,168,8],[167,14,168,12,"isBackEligible"],[167,28,168,26],[167,32,168,30,"shouldBackNavigateToInitialRoute"],[167,64,168,8],[167,66,168,64],[168,0,169,10,"activeChildIndex"],[168,12,169,10,"activeChildIndex"],[168,28,169,26],[168,31,169,29,"initialRouteIndex"],[168,48,169,10],[169,0,170,9],[169,11,168,8],[169,17,170,15],[170,0,171,10],[170,19,171,17,"state"],[170,24,171,10],[171,0,172,9],[172,0,173,7],[174,0,175,6],[174,12,175,10,"didNavigate"],[174,23,175,21],[174,26,175,24],[174,31,175,6],[176,0,176,6],[176,12,176,10,"action"],[176,18,176,16],[176,19,176,17,"type"],[176,23,176,10],[176,28,176,26,"NavigationActions"],[176,55,176,44,"NAVIGATE"],[176,63,176,6],[176,65,176,54],[177,0,177,8,"didNavigate"],[177,10,177,8,"didNavigate"],[177,21,177,19],[177,24,177,22],[177,25,177,23],[177,26,177,24,"order"],[177,31,177,29],[177,32,177,30,"find"],[177,36,177,24],[177,37,177,35],[177,47,177,36,"childId"],[177,54,177,35],[177,56,177,45,"i"],[177,57,177,35],[177,59,177,51],[178,0,178,10],[178,16,178,14,"childId"],[178,23,178,21],[178,28,178,26,"action"],[178,34,178,32],[178,35,178,33,"routeName"],[178,44,178,10],[178,46,178,44],[179,0,179,12,"activeChildIndex"],[179,14,179,12,"activeChildIndex"],[179,30,179,28],[179,33,179,31,"i"],[179,34,179,12],[180,0,180,12],[180,21,180,19],[180,25,180,12],[181,0,181,11],[183,0,182,10],[183,19,182,17],[183,24,182,10],[184,0,183,9],[184,11,177,24],[184,12,177,8],[186,0,184,8],[186,14,184,12,"didNavigate"],[186,25,184,8],[186,27,184,25],[187,0,185,10],[187,16,185,16,"childState"],[187,26,185,26],[187,29,185,29,"state"],[187,34,185,34],[187,35,185,35,"routes"],[187,41,185,29],[187,42,185,42,"activeChildIndex"],[187,58,185,29],[187,59,185,10],[188,0,186,10],[188,16,186,16,"childRouter"],[188,27,186,27],[188,30,186,30,"childRouters"],[188,42,186,42],[188,43,186,43,"action"],[188,49,186,49],[188,50,186,50,"routeName"],[188,59,186,42],[188,60,186,10],[189,0,187,10],[189,16,187,14,"newChildState"],[189,29,187,10],[191,0,189,10],[191,16,189,14,"action"],[191,22,189,20],[191,23,189,21,"action"],[191,29,189,10],[191,31,189,29],[192,0,190,12,"newChildState"],[192,14,190,12,"newChildState"],[192,27,190,25],[192,30,190,28,"childRouter"],[192,41,190,39],[192,44,191,16,"childRouter"],[192,55,191,27],[192,56,191,28,"getStateForAction"],[192,73,191,16],[192,74,191,46,"action"],[192,80,191,52],[192,81,191,53,"action"],[192,87,191,16],[192,89,191,61,"childState"],[192,99,191,16],[192,100,190,39],[192,103,192,16],[192,107,190,12],[193,0,193,11],[193,13,189,10],[193,19,193,17],[193,23,193,21],[193,24,193,22,"action"],[193,30,193,28],[193,31,193,29,"action"],[193,37,193,21],[193,41,193,39,"action"],[193,47,193,45],[193,48,193,46,"params"],[193,54,193,17],[193,56,193,54],[194,0,194,12,"newChildState"],[194,14,194,12,"newChildState"],[194,27,194,25],[194,48,195,17,"childState"],[194,58,194,25],[195,0,196,14,"params"],[195,16,196,14,"params"],[195,22,196,20],[195,42,197,20,"childState"],[195,52,197,30],[195,53,197,31,"params"],[195,59,197,20],[195,63,197,41],[195,65,196,20],[195,71,198,19,"action"],[195,77,198,25],[195,78,198,26,"params"],[195,84,196,20],[196,0,194,25],[196,16,194,12],[197,0,201,11],[199,0,203,10],[199,16,203,14,"newChildState"],[199,29,203,27],[199,33,203,31,"newChildState"],[199,46,203,44],[199,51,203,49,"childState"],[199,61,203,10],[199,63,203,61],[200,0,204,12],[200,18,204,18,"routes"],[200,26,204,24],[200,62,204,31,"state"],[200,67,204,36],[200,68,204,37,"routes"],[200,74,204,24],[200,75,204,12],[202,0,205,12,"routes"],[202,14,205,12,"routes"],[202,22,205,18],[202,23,205,19,"activeChildIndex"],[202,39,205,18],[202,40,205,12],[202,43,205,39,"newChildState"],[202,56,205,12],[203,0,206,12],[203,21,206,19,"getNextState"],[203,33,206,31],[203,34,206,32,"prevState"],[203,43,206,31],[203,63,207,17,"state"],[203,68,206,31],[204,0,208,14,"routes"],[204,16,208,14,"routes"],[204,22,208,20],[204,24,208,14,"routes"],[204,32,206,31],[205,0,209,14,"index"],[205,16,209,14,"index"],[205,21,209,19],[205,23,209,21,"activeChildIndex"],[206,0,206,31],[206,17,206,12],[207,0,211,11],[207,13,203,10],[207,19,211,17],[207,23,212,12],[207,24,212,13,"newChildState"],[207,37,212,12],[207,41,213,12,"state"],[207,46,213,17],[207,47,213,18,"index"],[207,52,213,12],[207,57,213,28,"activeChildIndex"],[207,73,212,12],[207,77,214,12,"prevState"],[207,86,211,17],[207,88,215,12],[208,0,216,12],[208,21,216,19],[208,25,216,12],[209,0,217,11],[210,0,218,9],[211,0,219,7],[213,0,221,6],[213,12,221,10,"action"],[213,18,221,16],[213,19,221,17,"type"],[213,23,221,10],[213,28,221,26,"NavigationActions"],[213,55,221,44,"SET_PARAMS"],[213,65,221,6],[213,67,221,56],[214,0,222,8],[214,14,222,14,"key"],[214,17,222,17],[214,20,222,20,"action"],[214,26,222,26],[214,27,222,27,"key"],[214,30,222,8],[215,0,223,8],[215,14,223,14,"lastRoute"],[215,23,223,23],[215,26,223,26,"state"],[215,31,223,31],[215,32,223,32,"routes"],[215,38,223,26],[215,39,223,39,"find"],[215,43,223,26],[215,44,223,44],[215,54,223,44,"route"],[215,59,223,49],[216,0,223,49],[216,19,223,53,"route"],[216,24,223,58],[216,25,223,59,"key"],[216,28,223,53],[216,33,223,67,"key"],[216,36,223,49],[217,0,223,49],[217,11,223,26],[217,12,223,8],[219,0,224,8],[219,14,224,12,"lastRoute"],[219,23,224,8],[219,25,224,23],[220,0,225,10],[220,16,225,16,"params"],[220,23,225,22],[220,44,226,15,"lastRoute"],[220,53,226,24],[220,54,226,25,"params"],[220,60,225,22],[220,66,227,15,"action"],[220,72,227,21],[220,73,227,22,"params"],[220,79,225,22],[220,80,225,10],[222,0,229,10],[222,16,229,16,"routes"],[222,24,229,22],[222,60,229,29,"state"],[222,65,229,34],[222,66,229,35,"routes"],[222,72,229,22],[222,73,229,10],[224,0,230,10,"routes"],[224,12,230,10,"routes"],[224,20,230,16],[224,21,230,17,"state"],[224,26,230,22],[224,27,230,23,"routes"],[224,33,230,17],[224,34,230,30,"indexOf"],[224,41,230,17],[224,42,230,38,"lastRoute"],[224,51,230,17],[224,52,230,16],[224,53,230,10],[224,74,231,15,"lastRoute"],[224,83,230,10],[225,0,232,12,"params"],[225,14,232,12,"params"],[225,20,232,18],[225,22,232,12,"params"],[226,0,230,10],[227,0,234,10],[227,19,234,17,"getNextState"],[227,31,234,29],[227,32,234,30,"prevState"],[227,41,234,29],[227,61,235,15,"state"],[227,66,234,29],[228,0,236,12,"routes"],[228,14,236,12,"routes"],[228,20,236,18],[228,22,236,12,"routes"],[229,0,234,29],[229,15,234,10],[230,0,238,9],[231,0,239,7],[233,0,241,6],[233,12,241,10,"activeChildIndex"],[233,28,241,26],[233,33,241,31,"state"],[233,38,241,36],[233,39,241,37,"index"],[233,44,241,6],[233,46,241,44],[234,0,242,8],[234,17,242,15,"getNextState"],[234,29,242,27],[234,30,242,28,"prevState"],[234,39,242,27],[234,59,243,13,"state"],[234,64,242,27],[235,0,244,10,"index"],[235,12,244,10,"index"],[235,17,244,15],[235,19,244,17,"activeChildIndex"],[236,0,242,27],[236,13,242,8],[237,0,246,7],[237,9,241,6],[237,15,246,13],[237,19,246,17,"didNavigate"],[237,30,246,28],[237,34,246,32],[237,35,246,33,"inputState"],[237,45,246,13],[237,47,246,45],[238,0,247,8],[238,17,247,15,"state"],[238,22,247,8],[239,0,248,7],[239,9,246,13],[239,15,248,13],[239,19,248,17,"didNavigate"],[239,30,248,13],[239,32,248,30],[240,0,249,8],[240,35,249,20,"state"],[240,40,249,8],[241,0,250,7],[243,0,253,6],[243,12,253,10,"index"],[243,17,253,15],[243,20,253,18,"state"],[243,25,253,23],[243,26,253,24,"index"],[243,31,253,6],[244,0,254,6],[244,12,254,10,"routes"],[244,18,254,16],[244,21,254,19,"state"],[244,26,254,24],[244,27,254,25,"routes"],[244,33,254,6],[245,0,255,6,"order"],[245,8,255,6,"order"],[245,13,255,11],[245,14,255,12,"find"],[245,18,255,6],[245,19,255,17],[245,29,255,18,"childId"],[245,36,255,17],[245,38,255,27,"i"],[245,39,255,17],[245,41,255,33],[246,0,256,8],[246,14,256,14,"childRouter"],[246,25,256,25],[246,28,256,28,"childRouters"],[246,40,256,40],[246,41,256,41,"childId"],[246,48,256,40],[246,49,256,8],[248,0,257,8],[248,14,257,12,"i"],[248,15,257,13],[248,20,257,18,"index"],[248,25,257,8],[248,27,257,25],[249,0,258,10],[249,19,258,17],[249,24,258,10],[250,0,259,9],[252,0,260,8],[252,14,260,12,"childState"],[252,24,260,22],[252,27,260,25,"routes"],[252,33,260,31],[252,34,260,32,"i"],[252,35,260,31],[252,36,260,8],[254,0,261,8],[254,14,261,12,"childRouter"],[254,25,261,8],[254,27,261,25],[255,0,262,10,"childState"],[255,12,262,10,"childState"],[255,22,262,20],[255,25,262,23,"childRouter"],[255,36,262,34],[255,37,262,35,"getStateForAction"],[255,54,262,23],[255,55,262,53,"action"],[255,61,262,23],[255,63,262,61,"childState"],[255,73,262,23],[255,74,262,10],[256,0,263,9],[258,0,264,8],[258,14,264,12],[258,15,264,13,"childState"],[258,25,264,8],[258,27,264,25],[259,0,265,10,"index"],[259,12,265,10,"index"],[259,17,265,15],[259,20,265,18,"i"],[259,21,265,10],[260,0,266,10],[260,19,266,17],[260,23,266,10],[261,0,267,9],[263,0,268,8],[263,14,268,12,"childState"],[263,24,268,22],[263,29,268,27,"routes"],[263,35,268,33],[263,36,268,34,"i"],[263,37,268,33],[263,38,268,8],[263,40,268,38],[264,0,269,10,"routes"],[264,12,269,10,"routes"],[264,18,269,16],[264,54,269,23,"routes"],[264,60,269,16],[264,61,269,10],[265,0,270,10,"routes"],[265,12,270,10,"routes"],[265,18,270,16],[265,19,270,17,"i"],[265,20,270,16],[265,21,270,10],[265,24,270,22,"childState"],[265,34,270,10],[266,0,271,10,"index"],[266,12,271,10,"index"],[266,17,271,15],[266,20,271,18,"i"],[266,21,271,10],[267,0,272,10],[267,19,272,17],[267,23,272,10],[268,0,273,9],[270,0,274,8],[270,17,274,15],[270,22,274,8],[271,0,275,7],[271,9,255,6],[273,0,281,6],[273,12,281,10,"childrenUpdateWithoutSwitchingIndex"],[273,47,281,45],[273,48,281,46,"action"],[273,54,281,52],[273,55,281,53,"type"],[273,59,281,45],[273,60,281,6],[273,62,281,60],[274,0,282,8,"index"],[274,10,282,8,"index"],[274,15,282,13],[274,18,282,16,"state"],[274,23,282,21],[274,24,282,22,"index"],[274,29,282,8],[275,0,283,7],[277,0,285,6],[277,12,285,10,"index"],[277,17,285,15],[277,22,285,20,"state"],[277,27,285,25],[277,28,285,26,"index"],[277,33,285,10],[277,37,285,35,"routes"],[277,43,285,41],[277,48,285,46,"state"],[277,53,285,51],[277,54,285,52,"routes"],[277,60,285,6],[277,62,285,60],[278,0,286,8],[278,17,286,15,"getNextState"],[278,29,286,27],[278,30,286,28,"prevState"],[278,39,286,27],[278,59,287,13,"state"],[278,64,286,27],[279,0,288,10,"index"],[279,12,288,10,"index"],[279,17,288,15],[279,19,288,10,"index"],[279,24,286,27],[280,0,289,10,"routes"],[280,12,289,10,"routes"],[280,18,289,16],[280,20,289,10,"routes"],[281,0,286,27],[281,13,286,8],[282,0,291,7],[284,0,292,6],[284,15,292,13,"state"],[284,20,292,6],[285,0,293,5],[285,7,110,9],[286,0,295,4,"getComponentForState"],[286,6,295,4,"getComponentForState"],[286,26,110,9],[286,58,295,25,"state"],[286,63,110,9],[286,65,295,32],[287,0,296,6],[287,12,296,12,"routeName"],[287,21,296,21],[287,24,296,24,"state"],[287,29,296,29],[287,30,296,30,"routes"],[287,36,296,24],[287,37,296,37,"state"],[287,42,296,42],[287,43,296,43,"index"],[287,48,296,24],[287,50,296,50,"routeName"],[287,59,296,6],[288,0,297,6],[288,32,298,8,"routeName"],[288,41,297,6],[288,84,299,47,"state"],[288,89,299,52],[288,90,299,53,"index"],[288,95,297,6],[289,0,302,6],[289,12,302,12,"childRouter"],[289,23,302,23],[289,26,302,26,"childRouters"],[289,38,302,38],[289,39,302,39,"routeName"],[289,48,302,38],[289,49,302,6],[291,0,303,6],[291,12,303,10,"childRouter"],[291,23,303,6],[291,25,303,23],[292,0,304,8],[292,17,304,15,"childRouter"],[292,28,304,26],[292,29,304,27,"getComponentForState"],[292,49,304,15],[292,50,304,48,"state"],[292,55,304,53],[292,56,304,54,"routes"],[292,62,304,48],[292,63,304,61,"state"],[292,68,304,66],[292,69,304,67,"index"],[292,74,304,48],[292,75,304,15],[292,76,304,8],[293,0,305,7],[295,0,306,6],[295,15,306,13],[295,51,306,35,"routeConfigs"],[295,63,306,13],[295,65,306,49,"routeName"],[295,74,306,13],[295,75,306,6],[296,0,307,5],[296,7,110,9],[297,0,309,4,"getComponentForRouteName"],[297,6,309,4,"getComponentForRouteName"],[297,30,110,9],[297,66,309,29,"routeName"],[297,75,110,9],[297,77,309,40],[298,0,310,6],[298,15,310,13],[298,51,310,35,"routeConfigs"],[298,63,310,13],[298,65,310,49,"routeName"],[298,74,310,13],[298,75,310,6],[299,0,311,5],[299,7,110,9],[300,0,313,4,"getPathAndParamsForState"],[300,6,313,4,"getPathAndParamsForState"],[300,30,110,9],[300,66,313,29,"state"],[300,71,110,9],[300,73,313,36],[301,0,314,6],[301,12,314,12,"route"],[301,17,314,17],[301,20,314,20,"state"],[301,25,314,25],[301,26,314,26,"routes"],[301,32,314,20],[301,33,314,33,"state"],[301,38,314,38],[301,39,314,39,"index"],[301,44,314,20],[301,45,314,6],[302,0,315,6],[302,15,315,13,"getPathAndParamsForRoute"],[302,39,315,37],[302,40,315,38,"route"],[302,45,315,37],[302,46,315,6],[303,0,316,5],[303,7,110,9],[304,0,318,4,"getActionForPathAndParams"],[304,6,318,4,"getActionForPathAndParams"],[304,31,110,9],[304,68,318,30,"path"],[304,72,110,9],[304,74,318,36,"params"],[304,80,110,9],[304,82,318,44],[305,0,319,6],[305,15,319,13,"getActionForPathAndParams"],[305,41,319,38],[305,42,319,39,"path"],[305,46,319,38],[305,48,319,45,"params"],[305,54,319,38],[305,55,319,6],[306,0,320,5],[306,7,110,9],[307,0,322,4,"getScreenOptions"],[307,6,322,4,"getScreenOptions"],[307,22,322,20],[307,24,322,22],[307,57,323,6,"routeConfigs"],[307,69,322,22],[307,71,324,6,"config"],[307,77,324,12],[307,78,324,13,"navigationOptions"],[307,95,322,22],[308,0,110,9],[308,5,110,2],[309,0,327,1],[309,3]]},"type":"js/module"}]}