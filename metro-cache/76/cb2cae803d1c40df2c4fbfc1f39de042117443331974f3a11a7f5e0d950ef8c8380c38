{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[2], \"react-navigation\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DrawerActions\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', false);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _reactNavigation.SwitchRouter)(routeConfigs, config);\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            openId: 0,\n            closeId: 0,\n            toggleId: 0\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return _objectSpread({}, state, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          if (action.type === _reactNavigation.NavigationActions.BACK && state.isDrawerOpen) {\n            return _objectSpread({}, state, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              openId: state.openId + 1\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              toggleId: state.toggleId + 1\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state)) {\n            return _objectSpread({}, switchedState, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,11,4,9,"withDefaultValue"],[19,27,4,0],[19,28,4,26,"obj"],[19,31,4,0],[19,33,4,31,"key"],[19,36,4,0],[19,38,4,36,"defaultValue"],[19,50,4,0],[19,52,4,50],[20,0,5,2],[20,8,5,6,"obj"],[20,11,5,9],[20,12,5,10,"hasOwnProperty"],[20,26,5,6],[20,27,5,25,"key"],[20,30,5,6],[20,35,5,33],[20,42,5,40,"obj"],[20,45,5,43],[20,46,5,44,"key"],[20,49,5,43],[20,50,5,33],[20,55,5,53],[20,66,5,2],[20,68,5,66],[21,0,6,4],[21,13,6,11,"obj"],[21,16,6,4],[22,0,7,3],[24,0,9,2,"obj"],[24,4,9,2,"obj"],[24,7,9,5],[24,8,9,6,"key"],[24,11,9,5],[24,12,9,2],[24,15,9,13,"defaultValue"],[24,27,9,2],[25,0,10,2],[25,11,10,9,"obj"],[25,14,10,2],[26,0,11,1],[28,0,13,0],[28,6,13,6,"getActiveRouteKey"],[28,23,13,23],[28,26,13,26],[28,35,13,6,"getActiveRouteKey"],[28,52,13,26],[28,53,13,26,"route"],[28,58,13,31],[28,60,13,35],[29,0,14,2],[29,8,14,6,"route"],[29,13,14,11],[29,14,14,12,"routes"],[29,20,14,6],[29,24,14,22,"route"],[29,29,14,27],[29,30,14,28,"routes"],[29,36,14,22],[29,37,14,35,"route"],[29,42,14,40],[29,43,14,41,"index"],[29,48,14,22],[29,49,14,2],[29,51,14,49],[30,0,15,4],[30,13,15,11,"getActiveRouteKey"],[30,30,15,28],[30,31,15,29,"route"],[30,36,15,34],[30,37,15,35,"routes"],[30,43,15,29],[30,44,15,42,"route"],[30,49,15,47],[30,50,15,48,"index"],[30,55,15,29],[30,56,15,28],[30,57,15,4],[31,0,16,3],[33,0,17,2],[33,11,17,9,"route"],[33,16,17,14],[33,17,17,15,"key"],[33,20,17,2],[34,0,18,1],[34,3,13,0],[36,17,20,16],[36,35,20,17,"routeConfigs"],[36,47,20,16],[36,49,20,47],[37,0,20,47],[37,8,20,31,"config"],[37,14,20,47],[37,85,20,40],[37,87,20,47],[38,0,21,2,"config"],[38,4,21,2,"config"],[38,10,21,8],[38,31,21,16,"config"],[38,37,21,8],[38,38,21,2],[39,0,22,2,"config"],[39,4,22,2,"config"],[39,10,22,8],[39,13,22,11,"withDefaultValue"],[39,29,22,27],[39,30,22,28,"config"],[39,36,22,27],[39,38,22,36],[39,51,22,27],[39,53,22,51],[39,58,22,27],[39,59,22,2],[40,0,23,2,"config"],[40,4,23,2,"config"],[40,10,23,8],[40,13,23,11,"withDefaultValue"],[40,29,23,27],[40,30,23,28,"config"],[40,36,23,27],[40,38,23,36],[40,52,23,27],[40,54,23,52],[40,68,23,27],[40,69,23,2],[41,0,25,2],[41,8,25,8,"switchRouter"],[41,20,25,20],[41,23,25,23],[41,58,25,36,"routeConfigs"],[41,70,25,23],[41,72,25,50,"config"],[41,78,25,23],[41,79,25,2],[42,0,27,2],[42,29,28,7,"switchRouter"],[42,41,27,2],[43,0,30,4,"getActionCreators"],[43,6,30,4,"getActionCreators"],[43,23,27,2],[43,52,30,22,"route"],[43,57,27,2],[43,59,30,29,"navStateKey"],[43,70,27,2],[43,72,30,42],[44,0,31,6],[45,0,32,8,"openDrawer"],[45,10,32,8,"openDrawer"],[45,20,32,18],[45,22,32,20],[46,0,32,20],[46,19,32,26,"DrawerActions"],[46,42,32,40,"openDrawer"],[46,52,32,26],[46,53,32,51],[47,0,32,53,"key"],[47,14,32,53,"key"],[47,17,32,56],[47,19,32,58,"navStateKey"],[48,0,32,51],[48,13,32,26],[48,14,32,20],[49,0,32,20],[49,11,31,6],[50,0,33,8,"closeDrawer"],[50,10,33,8,"closeDrawer"],[50,21,33,19],[50,23,33,21],[51,0,33,21],[51,19,33,27,"DrawerActions"],[51,42,33,41,"closeDrawer"],[51,53,33,27],[51,54,33,53],[52,0,33,55,"key"],[52,14,33,55,"key"],[52,17,33,58],[52,19,33,60,"navStateKey"],[53,0,33,53],[53,13,33,27],[53,14,33,21],[54,0,33,21],[54,11,31,6],[55,0,34,8,"toggleDrawer"],[55,10,34,8,"toggleDrawer"],[55,22,34,20],[55,24,34,22],[56,0,34,22],[56,19,34,28,"DrawerActions"],[56,42,34,42,"toggleDrawer"],[56,54,34,28],[56,55,34,55],[57,0,34,57,"key"],[57,14,34,57,"key"],[57,17,34,60],[57,19,34,62,"navStateKey"],[58,0,34,55],[58,13,34,28],[58,14,34,22],[59,0,34,22],[60,0,31,6],[60,11,35,11,"switchRouter"],[60,23,35,23],[60,24,35,24,"getActionCreators"],[60,41,35,11],[60,42,35,42,"route"],[60,47,35,11],[60,49,35,49,"navStateKey"],[60,60,35,11],[60,61,31,6],[61,0,37,5],[61,7,27,2],[62,0,39,4,"getStateForAction"],[62,6,39,4,"getStateForAction"],[62,23,27,2],[62,52,39,22,"action"],[62,58,27,2],[62,60,39,30,"state"],[62,65,27,2],[62,67,39,37],[63,0,41,6],[63,12,41,10],[63,13,41,11,"state"],[63,18,41,6],[63,20,41,18],[64,0,42,8],[64,35,43,13,"switchRouter"],[64,47,43,25],[64,48,43,26,"getStateForAction"],[64,65,43,13],[64,66,43,44,"action"],[64,72,43,13],[64,74,43,52,"undefined"],[64,83,43,13],[64,84,42,8],[65,0,44,10,"isDrawerOpen"],[65,12,44,10,"isDrawerOpen"],[65,24,44,22],[65,26,44,24],[65,31,42,8],[66,0,45,10,"openId"],[66,12,45,10,"openId"],[66,18,45,16],[66,20,45,18],[66,21,42,8],[67,0,46,10,"closeId"],[67,12,46,10,"closeId"],[67,19,46,17],[67,21,46,19],[67,22,42,8],[68,0,47,10,"toggleId"],[68,12,47,10,"toggleId"],[68,20,47,18],[68,22,47,20],[69,0,42,8],[70,0,49,7],[72,0,51,6],[72,12,51,12,"isRouterTargeted"],[72,28,51,28],[72,31,51,31,"action"],[72,37,51,37],[72,38,51,38,"key"],[72,41,51,31],[72,45,51,45],[72,49,51,31],[72,53,51,53,"action"],[72,59,51,59],[72,60,51,60,"key"],[72,63,51,53],[72,68,51,68,"state"],[72,73,51,73],[72,74,51,74,"key"],[72,77,51,6],[74,0,53,6],[74,12,53,10,"isRouterTargeted"],[74,28,53,6],[74,30,53,28],[75,0,56,8],[75,14,56,12,"action"],[75,20,56,18],[75,21,56,19,"type"],[75,25,56,12],[75,30,56,28,"DrawerActions"],[75,53,56,42,"DRAWER_CLOSED"],[75,66,56,8],[75,68,56,57],[76,0,57,10],[76,37,58,15,"state"],[76,42,57,10],[77,0,59,12,"isDrawerOpen"],[77,14,59,12,"isDrawerOpen"],[77,26,59,24],[77,28,59,26],[78,0,57,10],[79,0,61,9],[81,0,63,8],[81,14,63,12,"action"],[81,20,63,18],[81,21,63,19,"type"],[81,25,63,12],[81,30,63,28,"DrawerActions"],[81,53,63,42,"DRAWER_OPENED"],[81,66,63,8],[81,68,63,57],[82,0,64,10],[82,37,65,15,"state"],[82,42,64,10],[83,0,66,12,"isDrawerOpen"],[83,14,66,12,"isDrawerOpen"],[83,26,66,24],[83,28,66,26],[84,0,64,10],[85,0,68,9],[87,0,70,8],[87,14,70,12,"action"],[87,20,70,18],[87,21,70,19,"type"],[87,25,70,12],[87,30,70,28,"DrawerActions"],[87,53,70,42,"CLOSE_DRAWER"],[87,65,70,8],[87,67,70,56],[88,0,71,10],[88,37,72,15,"state"],[88,42,71,10],[89,0,73,12,"closeId"],[89,14,73,12,"closeId"],[89,21,73,19],[89,23,73,21,"state"],[89,28,73,26],[89,29,73,27,"closeId"],[89,36,73,21],[89,39,73,37],[90,0,71,10],[91,0,75,9],[93,0,77,8],[93,14,77,12,"action"],[93,20,77,18],[93,21,77,19,"type"],[93,25,77,12],[93,30,77,28,"NavigationActions"],[93,65,77,46,"BACK"],[93,69,77,12],[93,73,77,54,"state"],[93,78,77,59],[93,79,77,60,"isDrawerOpen"],[93,91,77,8],[93,93,77,74],[94,0,78,10],[94,37,79,15,"state"],[94,42,78,10],[95,0,80,12,"closeId"],[95,14,80,12,"closeId"],[95,21,80,19],[95,23,80,21,"state"],[95,28,80,26],[95,29,80,27,"closeId"],[95,36,80,21],[95,39,80,37],[96,0,78,10],[97,0,82,9],[99,0,84,8],[99,14,84,12,"action"],[99,20,84,18],[99,21,84,19,"type"],[99,25,84,12],[99,30,84,28,"DrawerActions"],[99,53,84,42,"OPEN_DRAWER"],[99,64,84,8],[99,66,84,55],[100,0,85,10],[100,37,86,15,"state"],[100,42,85,10],[101,0,87,12,"openId"],[101,14,87,12,"openId"],[101,20,87,18],[101,22,87,20,"state"],[101,27,87,25],[101,28,87,26,"openId"],[101,34,87,20],[101,37,87,35],[102,0,85,10],[103,0,89,9],[105,0,91,8],[105,14,91,12,"action"],[105,20,91,18],[105,21,91,19,"type"],[105,25,91,12],[105,30,91,28,"DrawerActions"],[105,53,91,42,"TOGGLE_DRAWER"],[105,66,91,8],[105,68,91,57],[106,0,92,10],[106,37,93,15,"state"],[106,42,92,10],[107,0,94,12,"toggleId"],[107,14,94,12,"toggleId"],[107,22,94,20],[107,24,94,22,"state"],[107,29,94,27],[107,30,94,28,"toggleId"],[107,38,94,22],[107,41,94,39],[108,0,92,10],[109,0,96,9],[110,0,97,7],[112,0,100,6],[112,12,100,12,"switchedState"],[112,25,100,25],[112,28,100,28,"switchRouter"],[112,40,100,40],[112,41,100,41,"getStateForAction"],[112,58,100,28],[112,59,100,59,"action"],[112,65,100,28],[112,67,100,67,"state"],[112,72,100,28],[112,73,100,6],[114,0,102,6],[114,12,102,10,"switchedState"],[114,25,102,23],[114,30,102,28],[114,34,102,6],[114,36,102,34],[115,0,104,8],[115,17,104,15],[115,21,104,8],[116,0,105,7],[118,0,108,6],[118,12,108,10,"switchedState"],[118,25,108,23],[118,30,108,28,"state"],[118,35,108,6],[118,37,108,35],[119,0,109,8],[119,14,109,12,"getActiveRouteKey"],[119,31,109,29],[119,32,109,30,"switchedState"],[119,45,109,29],[119,46,109,12],[119,51,109,49,"getActiveRouteKey"],[119,68,109,66],[119,69,109,67,"state"],[119,74,109,66],[119,75,109,8],[119,77,109,75],[120,0,111,10],[120,37,112,15,"switchedState"],[120,50,111,10],[121,0,113,12,"closeId"],[121,14,113,12,"closeId"],[121,21,113,19],[121,23,113,21,"state"],[121,28,113,26],[121,29,113,27,"closeId"],[121,36,113,21],[121,39,113,37],[122,0,111,10],[123,0,115,9],[125,0,120,8],[125,17,120,15,"switchedState"],[125,30,120,8],[126,0,121,7],[128,0,123,6],[128,15,123,13,"state"],[128,20,123,6],[129,0,124,5],[130,0,27,2],[131,0,126,1],[131,3]]},"type":"js/module"}]}