{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"../utils/shallowEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/shallowEqual\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState, descriptors) {\n    scenes.forEach(function (scene) {\n      var route = scene.route;\n\n      if (descriptors && descriptors[route.key]) {\n        scene.descriptor = descriptors[route.key];\n      }\n    });\n\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    nextState.routes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var descriptor = descriptors && descriptors[route.key];\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route,\n        descriptor: descriptor\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      prevState.routes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        var lastScene = scenes.find(function (scene) {\n          return scene.route.key === route.key;\n        });\n        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];\n\n        if (descriptor) {\n          staleScenes.set(key, {\n            index: index,\n            isActive: false,\n            isStale: true,\n            key: key,\n            route: route,\n            descriptor: descriptor\n          });\n        }\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,6,4,6,"SCENE_KEY_PREFIX"],[19,22,4,22],[19,25,4,25],[19,33,4,0],[21,0,9,0],[21,11,9,9,"compareKey"],[21,21,9,0],[21,22,9,20,"one"],[21,25,9,0],[21,27,9,25,"two"],[21,30,9,0],[21,32,9,30],[22,0,10,2],[22,8,10,8,"delta"],[22,13,10,13],[22,16,10,16,"one"],[22,19,10,19],[22,20,10,20,"length"],[22,26,10,16],[22,29,10,29,"two"],[22,32,10,32],[22,33,10,33,"length"],[22,39,10,2],[24,0,11,2],[24,8,11,6,"delta"],[24,13,11,11],[24,16,11,14],[24,17,11,2],[24,19,11,17],[25,0,12,4],[25,13,12,11],[25,14,12,4],[26,0,13,3],[28,0,14,2],[28,8,14,6,"delta"],[28,13,14,11],[28,16,14,14],[28,17,14,2],[28,19,14,17],[29,0,15,4],[29,13,15,11],[29,14,15,12],[29,15,15,4],[30,0,16,3],[32,0,17,2],[32,11,17,9,"one"],[32,14,17,12],[32,17,17,15,"two"],[32,20,17,9],[32,23,17,21],[32,24,17,9],[32,27,17,25],[32,28,17,26],[32,29,17,2],[33,0,18,1],[35,0,23,0],[35,11,23,9,"compareScenes"],[35,24,23,0],[35,25,23,23,"one"],[35,28,23,0],[35,30,23,28,"two"],[35,33,23,0],[35,35,23,33],[36,0,24,2],[36,8,24,6,"one"],[36,11,24,9],[36,12,24,10,"index"],[36,17,24,6],[36,20,24,18,"two"],[36,23,24,21],[36,24,24,22,"index"],[36,29,24,2],[36,31,24,29],[37,0,25,4],[37,13,25,11],[37,14,25,4],[38,0,26,3],[40,0,27,2],[40,8,27,6,"one"],[40,11,27,9],[40,12,27,10,"index"],[40,17,27,6],[40,20,27,18,"two"],[40,23,27,21],[40,24,27,22,"index"],[40,29,27,2],[40,31,27,29],[41,0,28,4],[41,13,28,11],[41,14,28,12],[41,15,28,4],[42,0,29,3],[44,0,31,2],[44,11,31,9,"compareKey"],[44,21,31,19],[44,22,31,20,"one"],[44,25,31,23],[44,26,31,24,"key"],[44,29,31,19],[44,31,31,29,"two"],[44,34,31,32],[44,35,31,33,"key"],[44,38,31,19],[44,39,31,2],[45,0,32,1],[47,0,37,0],[47,11,37,9,"areScenesShallowEqual"],[47,32,37,0],[47,33,37,31,"one"],[47,36,37,0],[47,38,37,36,"two"],[47,41,37,0],[47,43,37,41],[48,0,38,2],[48,11,38,9,"one"],[48,14,38,12],[48,15,38,13,"key"],[48,18,38,9],[48,23,38,21,"two"],[48,26,38,24],[48,27,38,25,"key"],[48,30,38,9],[48,34,38,32,"one"],[48,37,38,35],[48,38,38,36,"index"],[48,43,38,32],[48,48,38,46,"two"],[48,51,38,49],[48,52,38,50,"index"],[48,57,38,9],[48,61,38,59,"one"],[48,64,38,62],[48,65,38,63,"isStale"],[48,72,38,59],[48,77,38,75,"two"],[48,80,38,78],[48,81,38,79,"isStale"],[48,88,38,9],[48,92,38,90,"one"],[48,95,38,93],[48,96,38,94,"isActive"],[48,104,38,90],[48,109,38,107,"two"],[48,112,38,110],[48,113,38,111,"isActive"],[48,121,38,9],[48,125,38,123,"areRoutesShallowEqual"],[48,146,38,144],[48,147,38,145,"one"],[48,150,38,148],[48,151,38,149,"route"],[48,156,38,144],[48,158,38,156,"two"],[48,161,38,159],[48,162,38,160,"route"],[48,167,38,144],[48,168,38,2],[49,0,39,1],[51,0,44,0],[51,11,44,9,"areRoutesShallowEqual"],[51,32,44,0],[51,33,44,31,"one"],[51,36,44,0],[51,38,44,36,"two"],[51,41,44,0],[51,43,44,41],[52,0,45,2],[52,8,45,6],[52,9,45,7,"one"],[52,12,45,6],[52,16,45,14],[52,17,45,15,"two"],[52,20,45,2],[52,22,45,20],[53,0,46,4],[53,13,46,11,"one"],[53,16,46,14],[53,21,46,19,"two"],[53,24,46,4],[54,0,47,3],[56,0,49,2],[56,8,49,6,"one"],[56,11,49,9],[56,12,49,10,"key"],[56,15,49,6],[56,20,49,18,"two"],[56,23,49,21],[56,24,49,22,"key"],[56,27,49,2],[56,29,49,27],[57,0,50,4],[57,13,50,11],[57,18,50,4],[58,0,51,3],[60,0,53,2],[60,11,53,9],[60,38,53,22,"one"],[60,41,53,9],[60,43,53,27,"two"],[60,46,53,9],[60,47,53,2],[61,0,54,1],[63,0,56,15],[63,11,56,24,"ScenesReducer"],[63,24,56,15],[63,25,56,38,"scenes"],[63,31,56,15],[63,33,56,46,"nextState"],[63,42,56,15],[63,44,56,57,"prevState"],[63,53,56,15],[63,55,56,68,"descriptors"],[63,66,56,15],[63,68,56,81],[64,0,60,2,"scenes"],[64,4,60,2,"scenes"],[64,10,60,8],[64,11,60,9,"forEach"],[64,18,60,2],[64,19,60,17],[64,29,60,17,"scene"],[64,34,60,22],[64,36,60,26],[65,0,60,26],[65,10,61,12,"route"],[65,15,60,26],[65,18,61,22,"scene"],[65,23,60,26],[65,24,61,12,"route"],[65,29,60,26],[67,0,62,4],[67,10,62,8,"descriptors"],[67,21,62,19],[67,25,62,23,"descriptors"],[67,36,62,34],[67,37,62,35,"route"],[67,42,62,40],[67,43,62,41,"key"],[67,46,62,34],[67,47,62,4],[67,49,62,47],[68,0,63,6,"scene"],[68,8,63,6,"scene"],[68,13,63,11],[68,14,63,12,"descriptor"],[68,24,63,6],[68,27,63,25,"descriptors"],[68,38,63,36],[68,39,63,37,"route"],[68,44,63,42],[68,45,63,43,"key"],[68,48,63,36],[68,49,63,6],[69,0,64,5],[70,0,65,3],[70,5,60,2],[72,0,68,2],[72,8,68,6,"prevState"],[72,17,68,15],[72,22,68,20,"nextState"],[72,31,68,2],[72,33,68,31],[73,0,69,4],[73,13,69,11,"scenes"],[73,19,69,4],[74,0,70,3],[76,0,72,2],[76,8,72,8,"prevScenes"],[76,18,72,18],[76,21,72,21],[76,25,72,25,"Map"],[76,28,72,21],[76,30,72,2],[77,0,73,2],[77,8,73,8,"freshScenes"],[77,19,73,19],[77,22,73,22],[77,26,73,26,"Map"],[77,29,73,22],[77,31,73,2],[78,0,74,2],[78,8,74,8,"staleScenes"],[78,19,74,19],[78,22,74,22],[78,26,74,26,"Map"],[78,29,74,22],[78,31,74,2],[79,0,77,2,"scenes"],[79,4,77,2,"scenes"],[79,10,77,8],[79,11,77,9,"forEach"],[79,18,77,2],[79,19,77,17],[79,29,77,17,"scene"],[79,34,77,22],[79,36,77,26],[80,0,77,26],[80,10,78,12,"key"],[80,13,77,26],[80,16,78,20,"scene"],[80,21,77,26],[80,22,78,12,"key"],[80,25,77,26],[82,0,79,4],[82,10,79,8,"scene"],[82,15,79,13],[82,16,79,14,"isStale"],[82,23,79,4],[82,25,79,23],[83,0,80,6,"staleScenes"],[83,8,80,6,"staleScenes"],[83,19,80,17],[83,20,80,18,"set"],[83,23,80,6],[83,24,80,22,"key"],[83,27,80,6],[83,29,80,27,"scene"],[83,34,80,6],[84,0,81,5],[86,0,82,4,"prevScenes"],[86,6,82,4,"prevScenes"],[86,16,82,14],[86,17,82,15,"set"],[86,20,82,4],[86,21,82,19,"key"],[86,24,82,4],[86,26,82,24,"scene"],[86,31,82,4],[87,0,83,3],[87,5,77,2],[88,0,85,2],[88,8,85,8,"nextKeys"],[88,16,85,16],[88,19,85,19],[88,23,85,23,"Set"],[88,26,85,19],[88,28,85,2],[89,0,86,2,"nextState"],[89,4,86,2,"nextState"],[89,13,86,11],[89,14,86,12,"routes"],[89,20,86,2],[89,21,86,19,"forEach"],[89,28,86,2],[89,29,86,27],[89,39,86,28,"route"],[89,44,86,27],[89,46,86,35,"index"],[89,51,86,27],[89,53,86,45],[90,0,87,4],[90,10,87,10,"key"],[90,13,87,13],[90,16,87,16,"SCENE_KEY_PREFIX"],[90,32,87,32],[90,35,87,35,"route"],[90,40,87,40],[90,41,87,41,"key"],[90,44,87,4],[91,0,89,4],[91,10,89,8,"descriptor"],[91,20,89,18],[91,23,89,21,"descriptors"],[91,34,89,32],[91,38,89,36,"descriptors"],[91,49,89,47],[91,50,89,48,"route"],[91,55,89,53],[91,56,89,54,"key"],[91,59,89,47],[91,60,89,4],[92,0,91,4],[92,10,91,10,"scene"],[92,15,91,15],[92,18,91,18],[93,0,92,6,"index"],[93,8,92,6,"index"],[93,13,92,11],[93,15,92,6,"index"],[93,20,91,18],[94,0,93,6,"isActive"],[94,8,93,6,"isActive"],[94,16,93,14],[94,18,93,16],[94,23,91,18],[95,0,94,6,"isStale"],[95,8,94,6,"isStale"],[95,15,94,13],[95,17,94,15],[95,22,91,18],[96,0,95,6,"key"],[96,8,95,6,"key"],[96,11,95,9],[96,13,95,6,"key"],[96,16,91,18],[97,0,96,6,"route"],[97,8,96,6,"route"],[97,13,96,11],[97,15,96,6,"route"],[97,20,91,18],[98,0,97,6,"descriptor"],[98,8,97,6,"descriptor"],[98,18,97,16],[98,20,97,6,"descriptor"],[99,0,91,18],[99,7,91,4],[100,0,99,4],[100,30,99,14],[100,31,99,15,"nextKeys"],[100,39,99,23],[100,40,99,24,"has"],[100,43,99,15],[100,44,99,28,"key"],[100,47,99,15],[100,48,99,4],[100,50,99,34],[100,79,99,61,"index"],[100,84,99,34],[100,100,99,76,"key"],[100,103,99,34],[100,129,99,101],[100,145,99,4],[101,0,100,4,"nextKeys"],[101,6,100,4,"nextKeys"],[101,14,100,12],[101,15,100,13,"add"],[101,18,100,4],[101,19,100,17,"key"],[101,22,100,4],[103,0,102,4],[103,10,102,8,"staleScenes"],[103,21,102,19],[103,22,102,20,"has"],[103,25,102,8],[103,26,102,24,"key"],[103,29,102,8],[103,30,102,4],[103,32,102,30],[104,0,105,6,"staleScenes"],[104,8,105,6,"staleScenes"],[104,19,105,17],[104,20,105,18,"delete"],[104,26,105,6],[104,27,105,25,"key"],[104,30,105,6],[105,0,106,5],[107,0,107,4,"freshScenes"],[107,6,107,4,"freshScenes"],[107,17,107,15],[107,18,107,16,"set"],[107,21,107,4],[107,22,107,20,"key"],[107,25,107,4],[107,27,107,25,"scene"],[107,32,107,4],[108,0,108,3],[108,5,86,2],[110,0,110,2],[110,8,110,6,"prevState"],[110,17,110,2],[110,19,110,17],[111,0,112,4,"prevState"],[111,6,112,4,"prevState"],[111,15,112,13],[111,16,112,14,"routes"],[111,22,112,4],[111,23,112,21,"forEach"],[111,30,112,4],[111,31,112,29],[111,41,112,30,"route"],[111,46,112,29],[111,48,112,37,"index"],[111,53,112,29],[111,55,112,47],[112,0,113,6],[112,12,113,12,"key"],[112,15,113,15],[112,18,113,18,"SCENE_KEY_PREFIX"],[112,34,113,34],[112,37,113,37,"route"],[112,42,113,42],[112,43,113,43,"key"],[112,46,113,6],[114,0,114,6],[114,12,114,10,"freshScenes"],[114,23,114,21],[114,24,114,22,"has"],[114,27,114,10],[114,28,114,26,"key"],[114,31,114,10],[114,32,114,6],[114,34,114,32],[115,0,115,8],[116,0,116,7],[118,0,117,6],[118,12,117,12,"lastScene"],[118,21,117,21],[118,24,117,24,"scenes"],[118,30,117,30],[118,31,117,31,"find"],[118,35,117,24],[118,36,117,36],[118,46,117,36,"scene"],[118,51,117,41],[119,0,117,41],[119,17,117,45,"scene"],[119,22,117,50],[119,23,117,51,"route"],[119,28,117,45],[119,29,117,57,"key"],[119,32,117,45],[119,37,117,65,"route"],[119,42,117,70],[119,43,117,71,"key"],[119,46,117,41],[120,0,117,41],[120,9,117,24],[120,10,117,6],[121,0,124,6],[121,12,124,12,"descriptor"],[121,22,124,22],[121,25,124,25,"lastScene"],[121,34,124,34],[121,37,124,37,"lastScene"],[121,46,124,46],[121,47,124,47,"descriptor"],[121,57,124,34],[121,60,124,60,"descriptors"],[121,71,124,71],[121,72,124,72,"route"],[121,77,124,77],[121,78,124,78,"key"],[121,81,124,71],[121,82,124,6],[123,0,126,6],[123,12,126,10,"descriptor"],[123,22,126,6],[123,24,126,22],[124,0,127,8,"staleScenes"],[124,10,127,8,"staleScenes"],[124,21,127,19],[124,22,127,20,"set"],[124,25,127,8],[124,26,127,24,"key"],[124,29,127,8],[124,31,127,29],[125,0,128,10,"index"],[125,12,128,10,"index"],[125,17,128,15],[125,19,128,10,"index"],[125,24,127,29],[126,0,129,10,"isActive"],[126,12,129,10,"isActive"],[126,20,129,18],[126,22,129,20],[126,27,127,29],[127,0,130,10,"isStale"],[127,12,130,10,"isStale"],[127,19,130,17],[127,21,130,19],[127,25,127,29],[128,0,131,10,"key"],[128,12,131,10,"key"],[128,15,131,13],[128,17,131,10,"key"],[128,20,127,29],[129,0,132,10,"route"],[129,12,132,10,"route"],[129,17,132,15],[129,19,132,10,"route"],[129,24,127,29],[130,0,133,10,"descriptor"],[130,12,133,10,"descriptor"],[130,22,133,20],[130,24,133,10,"descriptor"],[131,0,127,29],[131,11,127,8],[132,0,135,7],[133,0,136,5],[133,7,112,4],[134,0,137,3],[136,0,139,2],[136,8,139,8,"nextScenes"],[136,18,139,18],[136,21,139,21],[136,23,139,2],[138,0,141,2],[138,8,141,8,"mergeScene"],[138,18,141,18],[138,21,141,21],[138,30,141,8,"mergeScene"],[138,40,141,21],[138,41,141,21,"nextScene"],[138,50,141,30],[138,52,141,34],[139,0,141,34],[139,10,142,12,"key"],[139,13,141,34],[139,16,142,20,"nextScene"],[139,25,141,34],[139,26,142,12,"key"],[139,29,141,34],[140,0,143,4],[140,10,143,10,"prevScene"],[140,19,143,19],[140,22,143,22,"prevScenes"],[140,32,143,32],[140,33,143,33,"has"],[140,36,143,22],[140,37,143,37,"key"],[140,40,143,22],[140,44,143,44,"prevScenes"],[140,54,143,54],[140,55,143,55,"get"],[140,58,143,44],[140,59,143,59,"key"],[140,62,143,44],[140,63,143,22],[140,66,143,66],[140,70,143,4],[142,0,144,4],[142,10,144,8,"prevScene"],[142,19,144,17],[142,23,144,21,"areScenesShallowEqual"],[142,44,144,42],[142,45,144,43,"prevScene"],[142,54,144,42],[142,56,144,54,"nextScene"],[142,65,144,42],[142,66,144,4],[142,68,144,66],[143,0,147,6,"nextScenes"],[143,8,147,6,"nextScenes"],[143,18,147,16],[143,19,147,17,"push"],[143,23,147,6],[143,24,147,22,"prevScene"],[143,33,147,6],[144,0,148,5],[144,7,144,4],[144,13,148,11],[145,0,149,6,"nextScenes"],[145,8,149,6,"nextScenes"],[145,18,149,16],[145,19,149,17,"push"],[145,23,149,6],[145,24,149,22,"nextScene"],[145,33,149,6],[146,0,150,5],[147,0,151,3],[147,5,141,2],[149,0,153,2,"staleScenes"],[149,4,153,2,"staleScenes"],[149,15,153,13],[149,16,153,14,"forEach"],[149,23,153,2],[149,24,153,22,"mergeScene"],[149,34,153,2],[150,0,154,2,"freshScenes"],[150,4,154,2,"freshScenes"],[150,15,154,13],[150,16,154,14,"forEach"],[150,23,154,2],[150,24,154,22,"mergeScene"],[150,34,154,2],[151,0,156,2,"nextScenes"],[151,4,156,2,"nextScenes"],[151,14,156,12],[151,15,156,13,"sort"],[151,19,156,2],[151,20,156,18,"compareScenes"],[151,33,156,2],[152,0,158,2],[152,8,158,6,"activeScenesCount"],[152,25,158,23],[152,28,158,26],[152,29,158,2],[153,0,159,2,"nextScenes"],[153,4,159,2,"nextScenes"],[153,14,159,12],[153,15,159,13,"forEach"],[153,22,159,2],[153,23,159,21],[153,33,159,22,"scene"],[153,38,159,21],[153,40,159,29,"ii"],[153,42,159,21],[153,44,159,36],[154,0,160,4],[154,10,160,10,"isActive"],[154,18,160,18],[154,21,160,21],[154,22,160,22,"scene"],[154,27,160,27],[154,28,160,28,"isStale"],[154,35,160,21],[154,39,160,39,"scene"],[154,44,160,44],[154,45,160,45,"index"],[154,50,160,39],[154,55,160,55,"nextState"],[154,64,160,64],[154,65,160,65,"index"],[154,70,160,4],[156,0,161,4],[156,10,161,8,"isActive"],[156,18,161,16],[156,23,161,21,"scene"],[156,28,161,26],[156,29,161,27,"isActive"],[156,37,161,4],[156,39,161,37],[157,0,162,6,"nextScenes"],[157,8,162,6,"nextScenes"],[157,18,162,16],[157,19,162,17,"ii"],[157,21,162,16],[157,22,162,6],[157,43,163,11,"scene"],[157,48,162,6],[158,0,164,8,"isActive"],[158,10,164,8,"isActive"],[158,18,164,16],[158,20,164,8,"isActive"],[159,0,162,6],[160,0,166,5],[162,0,167,4],[162,10,167,8,"isActive"],[162,18,167,4],[162,20,167,18],[163,0,168,6,"activeScenesCount"],[163,8,168,6,"activeScenesCount"],[163,25,168,23],[164,0,169,5],[165,0,170,3],[165,5,159,2],[166,0,172,2],[166,28,172,12,"activeScenesCount"],[166,45,172,29],[166,50,172,34],[166,51,172,2],[166,53,172,37],[166,108,172,2],[166,110,172,94,"activeScenesCount"],[166,127,172,2],[168,0,174,2],[168,8,174,6,"nextScenes"],[168,18,174,16],[168,19,174,17,"length"],[168,25,174,6],[168,30,174,28,"scenes"],[168,36,174,34],[168,37,174,35,"length"],[168,43,174,2],[168,45,174,43],[169,0,175,4],[169,13,175,11,"nextScenes"],[169,23,175,4],[170,0,176,3],[172,0,178,2],[172,8,178,6,"nextScenes"],[172,18,178,16],[172,19,178,17,"some"],[172,23,178,6],[172,24,178,22],[172,34,178,23,"scene"],[172,39,178,22],[172,41,178,30,"index"],[172,46,178,22],[173,0,178,22],[173,13,178,40],[173,14,178,41,"areScenesShallowEqual"],[173,35,178,62],[173,36,178,63,"scenes"],[173,42,178,69],[173,43,178,70,"index"],[173,48,178,69],[173,49,178,62],[173,51,178,78,"scene"],[173,56,178,62],[173,57,178,22],[174,0,178,22],[174,5,178,6],[174,6,178,2],[174,8,178,87],[175,0,179,4],[175,13,179,11,"nextScenes"],[175,23,179,4],[176,0,180,3],[178,0,183,2],[178,11,183,9,"scenes"],[178,17,183,2],[179,0,184,1]]},"type":"js/module"}]}